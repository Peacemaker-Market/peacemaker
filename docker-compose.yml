version: '3'
networks:
  development:
  test:
volumes:
  gem_cache:
  shared_data:
services:
  postgres:
    image: postgres:13.5-alpine
    # This needs to run as root for migrations to succeed
    # user: "1000:1000"
    stop_grace_period: 1m
    restart: on-failure
    environment:
        POSTGRES_PASSWORD: default
    volumes:
        - shared_data:/var/shared/postgres
    networks:
      - development
  redis:
    image: redis:4.0-alpine
    command: redis-server
    networks:
      - development
      - test
    volumes:
      - shared_data:/var/shared/redis
  tor:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: peacemaker_tor
    volumes:
      - .:/var/app
      - shared_data:/var/shared
    networks:
      - development
    entrypoint: docker-tor-entrypoint.sh
    command: ["tor", "-f", "/var/app/config/torrc-dev"]
    depends_on:
      - web
  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: peacemaker_worker
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    stdin_open: true
    tty: true
    command: ["bundle", "exec", "sidekiq"]
    environment:
      RAILS_ENV: development
      REDIS_URL_SIDEKIQ: "redis://redis:6379/1"
      SOCKS_PROXY_URL: "web"
    depends_on:
      - tor
      - redis
      - postgres
      - web
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web
    volumes:
      - .:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    entrypoint: dev-entrypoint.sh
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    environment:
      RAILS_ENV: development
      REDIS_URL_SIDEKIQ: "redis://redis:6379/1"
      EDITOR: vim
      DISABLE_BOOTSNAP: 'true'
      WEB_PASSWORD: 'secret'
      WEB_USERNAME: 'admin'
    depends_on:
      - redis
      - postgres