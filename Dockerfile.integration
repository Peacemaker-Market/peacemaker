FROM --platform=linux/amd64 ruby:2.7.5-buster

ENV APP_PATH /var/app
ENV BUNDLE_VERSION 2.1.4
ENV BUNDLE_PATH /usr/local/bundle/gems
ENV TMP_PATH /tmp/
ENV RAILS_LOG_TO_STDOUT true
ENV RAILS_PORT 3000

RUN apt-get update && apt-get upgrade -y

# install dependencies for application
RUN apt-get install \
git \
libxml2-dev \
libxslt-dev \
nodejs \
yarn \
imagemagick \
tzdata \
less \
libsqlite3-dev \
tor \
libffi-dev \
libsodium-dev \
redis -y\
&& mkdir -p $APP_PATH 


# Install chrome/driver dependencies.
RUN apt-get install unzip libxi6 libgconf-2-4 libasound2 libatk1.0-0 libgtk-3-0 libnspr4 libxcomposite1 libxcursor1 libxrandr2 libxss1 libxtst6 fonts-liberation libappindicator1 libnss3 xdg-utils lsof -y

# Install chrome.
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
RUN apt-get update -y
RUN apt-get install -y google-chrome-stable

# Install chromedriver.
RUN curl -sSO https://chromedriver.storage.googleapis.com/96.0.4664.45/chromedriver_linux64.zip
RUN unzip chromedriver_linux64.zip
RUN rm chromedriver_linux64.zip
RUN mv -f chromedriver /usr/bin/chromedriver
# RUN chown root:root /usr/local/bin/chromedriver
RUN chmod 0755 /usr/bin/chromedriver

RUN gem install bundler --version "$BUNDLE_VERSION" \
&& rm -rf $GEM_HOME/cache/*

# navigate to app directory
WORKDIR $APP_PATH

COPY Gemfile $APP_PATH/Gemfile
COPY Gemfile.lock $APP_PATH/Gemfile.lock
RUN bundle install

# https://stackoverflow.com/questions/46013544/yarn-install-command-error-no-such-file-or-directory-install
RUN apt remove cmdtest -y
RUN apt remove yarn -y
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update
RUN apt-get install yarn -y

ENV YARN_CACHE_FOLDER=/usr/local/yarn-cache
VOLUME /usr/local/yarn-cache
RUN yarn install

# copy entrypoint scripts and grant execution permissions
COPY ./test-docker-entrypoint.sh /usr/local/bin/test-entrypoint.sh
RUN chmod +x /usr/local/bin/test-entrypoint.sh

COPY ./test-capybara-entrypoint.sh /usr/local/bin/test-capybara-entrypoint.sh
RUN chmod +x /usr/local/bin/test-capybara-entrypoint.sh

EXPOSE $RAILS_PORT